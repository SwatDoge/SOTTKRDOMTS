diff --git a/node_modules/html2json/src/html2json.js b/node_modules/html2json/src/html2json.js
index ce86a91..43959d5 100644
--- a/node_modules/html2json/src/html2json.js
+++ b/node_modules/html2json/src/html2json.js
@@ -1,6 +1,6 @@
-(function(global) {
+(function (global) {
   DEBUG = false;
-  var debug = DEBUG ? console.log.bind(console) : function(){};
+  var debug = DEBUG ? console.log.bind(console) : function () { };
 
   if (typeof module === 'object' && typeof module.exports === 'object') {
     require('../lib/Pure-JavaScript-HTML5-Parser/htmlparser.js');
@@ -25,7 +25,7 @@
       child: [],
     };
     HTMLParser(html, {
-      start: function(tag, attrs, unary) {
+      start: function (tag, attrs, unary) {
         debug(tag, attrs, unary);
         // node for this element
         var node = {
@@ -33,16 +33,12 @@
           tag: tag,
         };
         if (attrs.length !== 0) {
-          node.attr = attrs.reduce(function(pre, attr) {
+          node.attr = attrs.reduce(function (pre, attr) {
             var name = attr.name;
             var value = attr.value;
+            let reg = new RegExp(/file:\/\/\/(\S+)/g);
 
-            // has multi attibutes
-            // make it array of attribute
-            if (value.match(/ /)) {
-              value = value.split(' ');
-            }
-
+            value = [...reg.exec(value) ?? [], ...value.replace(reg, "").split(" ")];
             // if attr already exists
             // merge it
             if (pre[name]) {
@@ -74,7 +70,7 @@
           bufArray.unshift(node);
         }
       },
-      end: function(tag) {
+      end: function (tag) {
         debug(tag);
         // merge into parent tag
         var node = bufArray.shift();
@@ -90,7 +86,7 @@
           parent.child.push(node);
         }
       },
-      chars: function(text) {
+      chars: function (text) {
         debug(text);
         var node = {
           node: 'text',
@@ -106,7 +102,7 @@
           parent.child.push(node);
         }
       },
-      comment: function(text) {
+      comment: function (text) {
         debug(text);
         var node = {
           node: 'comment',
@@ -119,6 +115,7 @@
         parent.child.push(node);
       },
     });
+
     return results;
   };
 
@@ -128,14 +125,14 @@
 
     var child = '';
     if (json.child) {
-      child = json.child.map(function(c) {
+      child = json.child.map(function (c) {
         return json2html(c);
       }).join('');
     }
 
     var attr = '';
     if (json.attr) {
-      attr = Object.keys(json.attr).map(function(key) {
+      attr = Object.keys(json.attr).map(function (key) {
         var value = json.attr[key];
         if (Array.isArray(value)) value = value.join(' ');
         return key + '=' + q(value);
